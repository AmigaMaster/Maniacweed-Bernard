#region Room

/****************************
*   Room Functions
****************************/

function room_Load()
{

}

function room_FirstLoad()
{

}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

function room_RepExec()
{

}

#endregion

#region Door

/****************************
*   Door Hotspot Functions
***************************/

function hDoorBritneysRoom_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Doors.AnyClick(BernBritneysRoom, oDoorBritneysRoom.ID, 280, 120, eDirectionRight, BernHallSecondFloor, 40, 120, eDirectionRight) == 0) Verbs.Unhandled();
}

#endregion


#region Drawers

/****************************
*   Drawers Functions
****************************/
/// SetDrawerState()
/// Enables/Disables the hotspot of a drawer. Set opposite to its corresponding
/// object. If the object is visible the hotspot is disabled. If the object is
/// visible the hotspot is enabled again.

function SetDrawerState()
{
  hDrawerT.Enabled = !oDrawerT.Visible;
  hDrawerUM.Enabled = !oDrawerUM.Visible;
  hDrawerLM.Enabled = !oDrawerLM.Visible;
  hDrawerB.Enabled = !oDrawerB.Visible;
}

function hDrawerT_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(190, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oDrawerT.Visible == false)
      {
        player.Say("Lila. Warum muss es immer Lila sein?");
      }
      else
      {
        player.Say("Da ist lauter Wäsche von Britney drinnen.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oDrawerT.Visible == false)
      {      
        player.Say("Ich sollte sie vorher aufmachen.");
      }
      else
      {      
        Wait(5);
        player.Say("Ich wühle nicht in ihrer Unterwäsche.");
        Wait(10);
        player.FaceDirection(eDirectionLeft);
        Wait(10);
        player.FaceDirection(eDirectionDown);
        Wait(10);
        player.Say("Nicht mehr.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      if (oDrawerT.Visible == false)   
      {
        aDrawerOpen.Play(); 
        oDrawerT.Visible = true;
        oDrawerUM.Visible = false;
        oDrawerLM.Visible = false;
        oDrawerB.Visible = false;
      }
      else 
      {
        player.Say("Die ist schon offen.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      if (oDrawerT.Visible == false)    
      {
        player.Say("Die ist schon zu.");        
      }
      else 
      {
        aDrawerClose.Play(); 
        oDrawerT.Visible = false;
      }    
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
  SetDrawerState();
}

function hDrawerUM_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(190, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oDrawerUM.Visible == false)
      {
        player.Say("Lila. Warum muss es immer Lila sein?");
      }
      else
      {
        player.Say("Da ist lauter Wäsche von Britney drinnen.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oDrawerUM.Visible == false)
      {      
        player.Say("Ich sollte sie vorher aufmachen.");
      }
      else
      {      
        Wait(5);
        player.Say("Ich wühle nicht in ihrer Unterwäsche.");
        Wait(10);
        player.FaceDirection(eDirectionLeft);
        Wait(10);
        player.FaceDirection(eDirectionDown);
        Wait(10);
        player.Say("Nicht mehr.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      if (oDrawerUM.Visible == false) 
      {
        aDrawerOpen.Play(); 
        oDrawerT.Visible = false;
        oDrawerUM.Visible = true;
        oDrawerLM.Visible = false;
        oDrawerB.Visible = false;
      }
      else 
      {
        player.Say("Die ist schon offen.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      if (oDrawerUM.Visible == false)   
      {
        player.Say("Die ist schon zu.");        
      }
      else 
      {
        aDrawerClose.Play(); 
        oDrawerUM.Visible = false;
      }    
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
  SetDrawerState();
}

function hDrawerLM_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(190, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oDrawerLM.Visible == false)
      {
        player.Say("Lila. Warum muss es immer Lila sein?");
      }
      else
      {
        player.Say("Da ist lauter Wäsche von Britney drinnen.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oDrawerLM.Visible == false)
      {      
        player.Say("Ich sollte sie vorher aufmachen.");
      }
      else
      {      
        Wait(5);
        player.Say("Ich wühle nicht in ihrer Unterwäsche.");
        Wait(10);
        player.FaceDirection(eDirectionLeft);
        Wait(10);
        player.FaceDirection(eDirectionDown);
        Wait(10);
        player.Say("Nicht mehr.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      if (oDrawerLM.Visible == false) 
      {
        aDrawerOpen.Play(); 
        oDrawerT.Visible = false;
        oDrawerUM.Visible = false;
        oDrawerLM.Visible = true;
        oDrawerB.Visible = false;
      }
      else 
      {
        player.Say("Die ist schon offen.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      if (oDrawerLM.Visible == false)   
      {
        player.Say("Die ist schon zu.");        
      }
      else 
      {
        aDrawerClose.Play(); 
        oDrawerLM.Visible = false;
      }    
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
  SetDrawerState();
}

function hDrawerB_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(190, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oDrawerB.Visible == false)
      {
        player.Say("Lila. Warum muss es immer Lila sein?");
      }
      else
      {
        player.Say("Da ist lauter Wäsche von Britney drinnen.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oDrawerB.Visible == false)
      {      
        player.Say("Ich sollte sie vorher aufmachen.");
      }
      else
      {      
        Wait(5);
        player.Say("Ich wühle nicht in ihrer Unterwäsche.");
        Wait(10);
        player.FaceDirection(eDirectionLeft);
        Wait(10);
        player.FaceDirection(eDirectionDown);
        Wait(10);
        player.Say("Nicht mehr.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      if (oDrawerB.Visible == false)   
      {
        aDrawerOpen.Play(); 
        oDrawerT.Visible = false;
        oDrawerUM.Visible = false;
        oDrawerLM.Visible = false;
        oDrawerB.Visible = true;
      }
      else 
      {
        player.Say("Die ist schon offen.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      if (oDrawerB.Visible == false)    
      {
        player.Say("Die ist schon zu.");        
      }
      else 
      {
        aDrawerClose.Play(); 
        oDrawerB.Visible = false;
      }    
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
  SetDrawerState();
}

#endregion


#region Hotspots

/****************************
*   Hotspot Functions
****************************/

function hMirror_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(60, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Britneys Spiegel.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich brauche jetzt keinen Spiegel.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich habe nie besser ausgesehen. Leider.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Den kann man nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hWardrobe_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(245, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oWardrobe.Visible == false)
      {
        player.Say("Lila. Warum muss es immer Lila sein?");
      }
      else
      {
        player.Say("Britneys Kleider.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oWardrobe.Visible == false)
      {      
        player.Say("Ich sollte sie vorher aufmachen.");
      }
      else
      {      
        player.Say("Nein. Ihre Kleider würden mir sowieso nicht passen.");
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      if (oWardrobe.Visible == false)    
      {
        aDrawerOpen.Play(); 
        oWardrobe.Visible = true;
        hWardrobe.Enabled = false;
      }
      else 
      {
        player.Say("Die ist schon offen.");        
      }
    }
    else if (Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      if (oWardrobe.Visible == false)    
      {
        player.Say("Die ist schon zu.");        
      }
      else 
      {
        aDrawerClose.Play(); 
        oWardrobe.Visible = false;
        hWardrobe.Enabled = true;       
      }    
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hBed_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(165, 117, eDirectionLeft))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Sieht ziemlich abgenutzt aus.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Das bleibt hier.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Keine Chance. Wer weiß, wer da schon alles lag.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Nein. Ich fasse es nicht an.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Nein. Ich fasse es nicht an.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hWindow_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(20, 122, eDirectionLeft))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Das Beste an Britneys Zimmer ist die Aussicht.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich brauche jetzt kein Fenster.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Soll ich es öffnen oder schließen?");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Nein, ich könnte herausfallen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Das ist schon zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hDresserLD_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(60, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oDresserLD.Visible == false)
      {
        player.Say("Lila. Warum muss es immer Lila sein?");
      }
      else
      {
        player.Say("Da ist nur uninteressanter Frauenkram drin.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oDresserLD.Visible == false) 
      {
        player.Say("Ich sollte sie vorher aufmachen.");
      }
      else
      {
        player.Say("Da ist nur uninteressanter Frauenkram drin.");
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Pull))
    {
      if (oDresserLD.Visible == false)
      {
        aDrawerOpen.Play();        
        oDresserLD.Visible = true;
        hDresserLD.Enabled = false;
      }
      else
      {
        player.Say("Die ist schon offen.");
      }
    }
    else if (Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      if (oDresserLD.Visible == false)
      {
        player.Say("Das ist schon zu.");
      }
      else
      {
        aDrawerClose.Play();        
        oDresserLD.Visible = false;
        hDresserLD.Enabled = true;
      }
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hDresserRD_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(60, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oDresserRD.Visible == false)
      {
        player.Say("Lila. Warum muss es immer Lila sein?");
      }
      else
      {
        player.Say("Da ist nur uninteressanter Frauenkram drin.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oDresserRD.Visible == false) 
      {
        player.Say("Ich sollte sie vorher aufmachen.");
      }
      else
      {
        player.Say("Da ist nur uninteressanter Frauenkram drin.");
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Pull))
    {
      if (oDresserRD.Visible == false)
      {
        aDrawerOpen.Play();        
        oDresserRD.Visible = true;
        hDresserRD.Enabled = false;
      }
      else
      {
        player.Say("Die ist schon offen.");
      }
    }
    else if (Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      if (oDresserRD.Visible == false)
      {
        player.Say("Das ist schon zu.");
      }
      else
      {
        aDrawerClose.Play();        
        oDresserRD.Visible = false;
        hDresserRD.Enabled = true;
      }
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

#endregion

#region Objects

/****************************
*   Object Functions
****************************/

#endregion


