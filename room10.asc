#region Room

/****************************
*   Room Functions
****************************/

function room_Load()
{

}

function room_FirstLoad()
{

}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

function room_RepExec()
{

}

#endregion

#region Door

/****************************
*   Door Hotspot Functions
***************************/

function hDoor01_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Doors.AnyClick(BernStorageRoom, oDoor01.ID, 110, 115, eDirectionLeft, BernHallGroundFloor, 88, 117, eDirectionDown) == 0) Verbs.Unhandled();  
}

#endregion

#region Hotspots

/****************************
*   Hotspot Functions
****************************/

function hShelf_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(155, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ein Regal.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Das ist viel zu schwer.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Das lässt sich nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Da ist nichts zum Schließen dran.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Das schaffe ich so nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Das schaffe ich so nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das will ich da nicht rein tun.");
    }
    else Verbs.Unhandled();
  }
}

#endregion

#region Objects

/****************************
*   Object Functions
****************************/

#endregion


