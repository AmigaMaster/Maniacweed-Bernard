// Bernards Zimmer

/****************************
*   Raum-Funktionen
****************************/

function room_Load()
{
  //aMusic6.Play(); //TODO
  oComputer.SetView(VCOMPUTERMONITOR, 0, 0);
  oComputer.Animate(0, 9, eRepeat, eNoBlock);
  oPerpetuumMobile.SetView(VPERPETUUMMOBILE, 0, 0);
  oPerpetuumMobile.Animate(0, 7, eRepeat, eNoBlock);
}

function room_FirstLoad()
{
  Doors.SetDoorState(1, 0);
  Doors.InitObject(1, oDoor.ID);
}


function room_AfterFadeIn()
{

}

function room_Leave()
{

}

/****************************
*   T�r-Hotspot-Funktionen
*
***************************/

function hDoor_AnyClick()
{
  //if (Doors.AnyClick(1, oDoor.ID, 40, 120, eDirectionLeft, 6, 280, 120, eDirectionLeft) == 0) Verbs.Unhandled(); correct values
  if (Doors.AnyClick(1, oDoor.ID, 40, 120, eDirectionLeft, 5, 40, 120, eDirectionRight) == 0) Verbs.Unhandled();
}

/****************************
*   Hotspot-Funktionen
****************************/

function hDiplom_AnyClick()
{
   if (Verbs.AnyClickMove(175, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("'Gewinner des Eierkopfpreises.'");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Ich lass es wo es ist.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Ich will es nicht beschädigen.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Ich kann es nicht öffnen.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Ich kann es nicht schließen.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
		else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich lass es wo es ist.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Verbs.Unhandled();
  }
}

function hBuecher_AnyClick()
{
  if (Verbs.AnyClickMove(220, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Meine Lieblingsb�cher.");
      Wait(10);
      player.FaceDirection(eDirectionDown);
      player.Say("Von Physik bis Astronomie ist alles dabei.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Oh, die kenne ich schon auswendig.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Ich kenne alle Bücher auswendig.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Ich will jetzt nicht lesen.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Geschlossene Lektüre.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
		else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie sind.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Verbs.Unhandled();
  }
}

function hChuck_AnyClick()
{
  if (Verbs.AnyClickMove(75, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Ein 'Geschenk' von Dr. Fred.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Die bleibt da stehen.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Ich vergreife mich nicht an wehrlosen Pflanzen.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Es ist nur eine Pflanze.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
		else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich lass sie wo sie ist.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Verbs.Unhandled();
  }
}

function hBett_AnyClick()
{
  if (Verbs.AnyClickMove(220, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Die Bettdecke liegt mathematisch genau ... ");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Das bleibt da stehen.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Noch zu viele Photonen im Raum.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Die Decke liegt gerade so sch�n.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
		else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Das bleibt da stehen.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Verbs.Unhandled();
  }
}

function hFenster01_AnyClick()
{
  if (Verbs.AnyClickMove(120, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Ich kann Hoagies Haus sehen.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Soll ich es �ffnen, oder schliessen?");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Das ist kein echtes Fenster.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Verbs.Unhandled();
  }
}

function hFenster02_AnyClick()
{
  if (Verbs.AnyClickMove(275, 120, eDirectionRight))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Ein guter Tag für die Photosynthese.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Ich brauche jetzt kein Fenster.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Soll ich es öffnen, oder schließen?");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Nein. Ich könnte herausfallen.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Das ist schon zu.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
		else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Es bewegt sich nicht.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das kann ich hier nicht benutzen.");
		}
		else Verbs.Unhandled();
  }
}

function hSchubladeR_AnyClick()
{
  if (Verbs.AnyClickMove(120, 120, eDirectionUp))
	{
    if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Die m�chte ich nicht mitnehmen.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      //aSound1.Play(); //TODO
      oSchubladeR.Visible = true;
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      //aSound1.Play(); //TODO
      oSchubladeR.Visible = true;
		}
    else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Verbs.Unhandled();
  }
}

function hSchubladeL_AnyClick()
{
  if (Verbs.AnyClickMove(80, 120, eDirectionUp))
	{
    if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Sie ist zu.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      //aSound1.Play(); //TODO
      oSchubladeL.Visible = true;
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Sie ist doch zu.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      //aSound1.Play(); //TODO
      oSchubladeL.Visible = true;
		}
    else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich kann sie nicht weiter rein drücken.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Damit kann ich die Schublade nicht öffnen.");
		}
		else Verbs.Unhandled();
  }
}

/****************************
*   Objekt-Funktionen
****************************/

function oComputer_AnyClick()
{
  if (Verbs.AnyClickMove(90, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Wir beide haben schon eine Menge Adventures erlebt!");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Das ist doch kein Laptop.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
			player.Say("Der funktioniert im Moment nicht.");
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("Ich habe Doors 10 installiert.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Das mache ich nicht.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Der hat ein geschlossenes Gehäuse.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich will ihn nicht verschieben.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Verbs.Unhandled();
  }
}

function oSchubladeL_AnyClick()
{
  if (Verbs.AnyClickMove(80, 120, eDirectionUp))
	{
    if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
      Wait(5);
      //aSound5.Play(); //TODO
      oSchubladeL.Visible = false;
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      //aSound5.Play(); //TODO
      oSchubladeL.Visible = false;
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Verbs.Unhandled();
  }
}

function oSchubladeR_AnyClick()
{
  if (Verbs.AnyClickMove(120, 120, eDirectionUp))
	{
    if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Die möchte ich nicht mitnehmen.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
      player.Say("Ich möchte da nichts rein tun.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Sie ist doch schon offen.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
      Wait(5);
      //aSound5.Play(); //TODO
      oSchubladeR.Visible = false;
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
      Wait(5);
      player.Say("Ich will sie nicht raus reissen.");
		}
    else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      //aSound5.Play(); //TODO
      oSchubladeR.Visible = false;
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein tun.");
		}
		else Verbs.Unhandled();
  }
}

function oPerpetuumMobile_AnyClick()
{
  if (Verbs.AnyClickMove(175, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Meine Arbeit für Jugend forscht.");
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("Es hört einfach nicht auf, sich zu drehen.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			player.Say("Im Moment brauche ich keine unerschöpfliche Energiequelle.");
      player.FaceDirection(eDirectionDown);
      Wait(5);
      player.Say("Vielleicht später.");
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
			player.Say("Ich möchte im Moment nicht.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Das mache ich jetzt nicht.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Verbs.Unhandled();
  }
}

function oKissen_AnyClick()
{
  if (Verbs.AnyClickMove(240, 120, eDirectionUp))
	{
		if (Verbs.UsedAction(eGA_WalkTo))
		{
		//	Wait(5);
		}
		else if (Verbs.UsedAction(eGA_LookAt))
		{
			Wait(5);
			player.Say("Mein flauschiges Daunenkissen.");
		}
		else if (Verbs.UsedAction(eGA_PickUp))
		{
			Wait(5);
			oKissen.Visible = false;
      Wait(5);
      //aSound4.Play(); //TODO
      Wait(5);
      player.AddInventory(iPillow);
		}
		else if (Verbs.UsedAction(eGA_Use))
		{
			Wait(5);
			player.Say("Ich möchte im Moment nicht.");
		}
		else if (Verbs.UsedAction(eGA_Open))
		{
			Wait(5);
      player.Say("Das mache ich jetzt nicht.");
		}
    else if (Verbs.UsedAction(eGA_Close))
		{
			Wait(5);
      player.Say("Das geht nicht.");
		}
		else if (Verbs.UsedAction(eGA_Pull))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (Verbs.UsedAction(eGA_Push))
		{
			Wait(5);
      player.Say("Ich will es nicht verschieben.");
		}
    else if (Verbs.UsedAction(eGA_UseInv))
		{
			Wait(5);
			player.Say("Das passt hier nicht.");
		}
		else Verbs.Unhandled();
  }
}
