#region Room

/****************************
*   Room Functions
****************************/

function room_Load()
{

}

function room_FirstLoad()
{

}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

function room_RepExec()
{

}

#endregion

#region Door

/****************************
*   Door Hotspot Functions
***************************/

function hDoorBernardsRoom_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Doors.AnyClick(BernBernardsRoom, oDoorBernardsRoom.ID, 280, 120, eDirectionRight, BernBernardsRoom, 40, 120, eDirectionRight) == 0) Verbs.Unhandled();
}

function hDoorBritneysRoom_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Doors.AnyClick(BernBritneysRoom, oDoorBritneysRoom.ID, 40, 120, eDirectionLeft, BernBritneysRoom, 280, 120, eDirectionLeft) == 0) Verbs.Unhandled();
}

function hDoorBedroom_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Doors.AnyClick(BernBedroom, oDoorBedroom.ID, 235, 112, eDirectionUp, BernBedroom, 50, 108, eDirectionRight) == 0) Verbs.Unhandled();
}

function hDoorBath_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Doors.AnyClick(BernBath, oDoorBath.ID, 80, 117, eDirectionUp, BernBath, 50, 108, eDirectionRight) == 0) Verbs.Unhandled();
}

#endregion

#region Hotspots

/****************************
*   Hotspot Functions
****************************/

function hStairs_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(190, 107, eDirectionLeft))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      Wait(5);
      player.ChangeRoom(9, 255, 64, eDirectionLeft);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Die Treppe nach unten.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich brauche jetzt keine Treppe.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich könnte einfach hinuntergehen.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Ich kann doch keine Treppe öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Ich kann die Treppe nicht schliessen.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hHatch_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(235, 117, eDirectionRight))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Die Luke zum Dachboden.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Da komme ich nicht ran.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Soll ich sie öffnen oder schließen?");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Da komme ich nicht ran.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Die ist schon zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Da komme ich nicht ran.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Da komme ich nicht ran.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      if (player.ActiveInventory == iHatchOpener)
      {
        Wait(20);
        aDrawerOpen.Play();
        oHatch.Visible = true;
        oLadder.Visible = true;
        hHatch.Enabled = false;
      }
      else player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

#endregion

#region Objects

/****************************
*   Object Functions
****************************/

function oHatch_AnyClick(Object *theObject, CursorMode mode)
{
  if (Verbs.AnyClickMove(235, 117, eDirectionRight))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      Wait(5);
      player.ChangeRoom(BernAttic, 230, 117, eDirectionLeft);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Da geht es zum Dachboden.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich kann die Luke nicht mitnehmen.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.ChangeRoom(BernAttic, 230, 130, eDirectionLeft);
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Die ist schon offen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(20);
      aDrawerOpen.Play();
      oLadder.Visible = false;
      oHatch.Visible = false;
      hHatch.Enabled = true;
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function oLadder_AnyClick(Object *theObject, CursorMode mode)
{
  if (Verbs.AnyClickMove(235, 117, eDirectionRight))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      //Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Da geht es zum Dachboden.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Die Leiter ist festgeschraubt.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.ChangeRoom(8, 230, 117, eDirectionLeft);
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Die ist schon offen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(20);
      aDrawerOpen.Play();
      oLadder.Visible = false;
      oHatch.Visible = false;
      hHatch.Enabled = true;
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Da bewegt sich nichts.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

#endregion

