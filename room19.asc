#region Room

/****************************
*   Room Functions
****************************/

function room_Load()
{

}

function room_FirstLoad()
{

}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

function room_RepExec()
{

}

#endregion

#region Door

/****************************
*   Door Hotspot Functions
***************************/

#endregion

#region Hotspots

/****************************
*   Hotspot Functions
****************************/

function hWindow_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(170, 112, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Von hier aus seh ich Hoagies Haus noch besser.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich brauche jetzt kein Fenster.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Soll ich es öffnen oder schließen?");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Es klemmt.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Das ist schon zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hPainting_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(235, 112, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("'An meinen schleimigsten Sohn, Mom.'");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Das bleibt hier.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich will es nicht übermalen.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Da ist sicher kein Tresor hinter.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Da ist nichts zum Schließen.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Ich lasse es da hängen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Ich lasse es da hängen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit würde ich das Bild beschädigen.");
    }
    else Verbs.Unhandled();
  }
}

function hPipe_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(120, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ein grüner Gartenschlauch.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich denke den Schlauch brauche ich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Das kann man nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Das kann man nicht schliessen.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit kann ich hier nichts machen.");
    }
    else Verbs.Unhandled();
  }
}

function hChemistryKit_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(120, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Mein alter Chemie-Baukasten.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich denke alles Brauchbare habe ich in die Luft gejagt.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Ich will den nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Der ist schon zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit kann ich hier nichts machen.");
    }
    else Verbs.Unhandled();
  }
}

function hMagazines_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(120, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ein paar alte Zeitschriften.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Die liegen hier ganz gut.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Die will ich jetzt nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Die will ich jetzt schliessen.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit kann ich hier nichts machen.");
    }
    else Verbs.Unhandled();
  }
}

function hGasolineCan_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(120, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
			player.Say("Ein Benzinkanister.");
      Wait(10);
      player.FaceDirection(eDirectionDown);
      Wait(10);
      player.Say("Kann manchmal sehr nützlich sein.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
			player.Say("Da ist kein Benzin drin.");
      Wait(10);
      player.FaceDirection(eDirectionDown);
      Wait(10);
      player.Say("Irgendwie überrascht mich das nicht.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Den will ich jetzt nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Der ist zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Ich lasse ihn da liegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit kann ich hier nichts machen.");
    }
    else Verbs.Unhandled();
  }
}

function hSuperGlue_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(120, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ein umgekippter Superkleber.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Den kann ich nicht nehmen.");
      Wait(10);
      player.Say("Er klebt zu sehr fest.");      
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Jetzt nicht.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Er klebt zu sehr fest.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Er klebt zu sehr fest.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Er klebt zu sehr fest.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Er klebt zu sehr fest.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit kann ich hier nichts machen.");
    }
    else Verbs.Unhandled();
  }
}

function hHatch_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(230, 117, eDirectionRight))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      Wait(5);
			player.ChangeRoom(BernHallSecondFloor, 235, 117, eDirectionLeft);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Da geht es runter.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich kann die Luke nicht mitnehmen.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
			player.ChangeRoom(4, 235, 130, eDirectionLeft);
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Die ist schon offen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Dann komme ich nicht mehr runter.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hBox_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(75, 117, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ein Karton.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Der bleibt hier!");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Soll ich es öffnen oder schließen?");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Ich will es nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Der Karton ist doch zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

function hSpeaker_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(305, 122, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ein Lautsprecher.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Der ist mir viel zu schwer.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Soll ich es öffnen oder schließen?");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
       player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Der Lautsprecher ist doch zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Der Lautsprecher ist mir zu schwer.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Der Lautsprecher ist mir zu schwer.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Ich will den Lautsprecher nicht kaputt machen.");
    }
    else Verbs.Unhandled();
  }
}

function hDiscosucks_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(305, 122, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Disco Sucks.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Das bleibt da hängen!");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich weiß nicht wie.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Ich kann es nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Ich kann es nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

#endregion

#region Objects

/****************************
*   Object Functions
****************************/

#endregion

