#region Room

/****************************
*   Room Functions
****************************/

function room_Load()
{

}

function room_FirstLoad()
{

}

function room_AfterFadeIn()
{

}

function room_Leave()
{

}

function room_RepExec()
{

}

#endregion

#region Door

/****************************
*   Door Hotspot Functions
***************************/

function hDoor01_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Doors.AnyClick(BernEntrance, oDoor01.ID, 142, 90, eDirectionUp, BernEntrance, 40, 115, eDirectionRight) == 0) Verbs.Unhandled();  
}

#endregion

#region Hotspots

/****************************
*   Hotspot Functions
****************************/

function hGarageDoor_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(445, 92, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      if (oGarageDoor.Visible == true)
      {
        Wait(5);
        player.ChangeRoom(BernGarage, 50, 122, eDirectionRight);
      } 
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Da geht es in unsere Garage.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Das kann ich nicht mitnehmen.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Womit?");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      if (oGarageDoor.Visible == false)
      {
        aGarageDoorOpen.Play();
        oGarageDoor.Visible = true;
      }
      else 
      {
        player.Say("Das Tor ist bereits offen.");
      }
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      if (oGarageDoor.Visible == false)
      {
        player.Say("Das Tor ist geschlossen.");
      }
      else
      {
        aGarageDoorClose.Play();
        oGarageDoor.Visible = false;        
      }
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      if (oGarageDoor.Visible == false)
      {
        player.Say("Damit bekomme ich das Tor nicht auf.");  
      }
      else 
      {
        player.Say("Damit bekomme ich das Tor nicht zu.");  
      }
    }
    else Verbs.Unhandled();
  }
}

function hWindow01_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(55, 102, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ich kann das Wohnzimmer sehen.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich brauche jetzt kein Fenster.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich möchte da nicht rein klettern.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Es klemmt.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Es ist doch zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit geht das Fenster nicht auf.");
    }
    else Verbs.Unhandled();
  }
}

function hWindow02_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(228, 102, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ich kann die Küche sehen.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Ich brauche jetzt kein Fenster.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich möchte da nicht rein klettern.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Es klemmt.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Es ist doch zu.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Damit geht das Fenster nicht auf.");
    }
    else Verbs.Unhandled();
  }
}

function hDoormat_AnyClick(Hotspot *theHotspot, CursorMode mode)
{
  if (Verbs.AnyClickMove(140, 112, eDirectionUp))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("'Willkommen'");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Außer Staub liegt da nichts drunter.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Meine Schuhe sind doch sauber.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Das geht nicht.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es lässt sich nicht bewegen.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das geht hier nicht.");
    }
    else Verbs.Unhandled();
  }
}

#endregion

#region Objects

/****************************
*   Object Functions
****************************/

function oMailbox_AnyClick(Object *theObject, CursorMode mode)
{
  if (Verbs.AnyClickMove(175, 122, eDirectionRight))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      if (oMailbox.Graphic == 46)
      {
        player.Say("Unser Briefkasten.");
      }
      else
      {
        player.Say("Nichts drin.");
      }
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      if (oMailbox.Graphic == 46)
      {
        player.Say("Ich sollte ihn erst einmal öffnen.");
      }
      else
      {
        player.Say("Nichts drinnne.");
      }
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      player.Say("Ich habe gerade keine Post zu verschicken.");
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      if (oMailbox.Graphic == 46)
      {
        aMailboxOpen.Play();
        oMailbox.Graphic = 45;
      }
      else
      {
        player.Say("Der ist schon offen.");
      }
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      if (oMailbox.Graphic == 46)
      {
        player.Say("Der ist schon zu.");
      }
      else
      {
        aMailboxClose.Play();
        oMailbox.Graphic = 46;
      }
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Es bewegt sich nicht.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Dann sollte ich es auch ausreichend frankieren.");
    }
    else Verbs.Unhandled();
  }
}

function oFlag_AnyClick(Object *theObject, CursorMode mode)
{
  if (Verbs.AnyClickMove(175, 122, eDirectionRight))
  {
    if (Verbs.UsedAction(eGA_WalkTo))
    {
      // Wait(5);
    }
    else if (Verbs.UsedAction(eGA_LookAt))
    {
      Wait(5);
      player.Say("Ein Briefkastenfähnchen.");
    }
    else if (Verbs.UsedAction(eGA_PickUp))
    {
      Wait(5);
      player.Say("Das will ich nicht mitnehmen.");
    }
    else if (Verbs.UsedAction(eGA_Use))
    {
      Wait(5);
      if (oFlag.Graphic == 48)
      {
//        aSound.Play(); //Ton fehlt noch
        oFlag.Graphic = 47;
      }
      else
      {
//        aSound.Play(); //Ton fehlt noch
        oFlag.Graphic = 48;        
      }
    }
    else if (Verbs.UsedAction(eGA_Open))
    {
      Wait(5);
      player.Say("Das kann man nicht öffnen.");
    }
    else if (Verbs.UsedAction(eGA_Close))
    {
      Wait(5);
      player.Say("Das kann ich nicht schließen.");
    }
    else if (Verbs.UsedAction(eGA_Pull))
    {
      Wait(5);
      if (oFlag.Graphic == 48)
      {
//        aSound.Play(); //Ton fehlt noch
        oFlag.Graphic = 47;
      }
      else
      {
//        aSound.Play(); //Ton fehlt noch
        oFlag.Graphic = 48;        
      }
    }
    else if (Verbs.UsedAction(eGA_Push))
    {
      Wait(5);
      player.Say("Ich kann es nicht drücken.");
    }
    else if (Verbs.UsedAction(eGA_UseInv))
    {
      Wait(5);
      player.Say("Das kann ich hier nicht benutzen.");
    }
    else Verbs.Unhandled();
  }
}

#endregion







